length(x)
x <- numeric()
out <- vector("list", length(x))
for (i in 1:length(x)) {
out[i] <- x[i] ^ 2
}
out
x <- numeric()
out <- vector("list", length(x))
for (i in 1:length(x)) {
i
out[i] <- x[i] ^ 2
}
out
out[1]
out[0]
x <- numeric()
length(x)
vector("list", length(x))
for (i in 1:length(x)) {
i
}
for (i in 1:length(x)) {
cat(i)
}
x <- numeric()
out <- vector("list", length(x))
for (i in 1:length(x)) {
cat(i)
out[i] <- x[i] ^ 2
}
out
out[[0]]
xs <- c(1, 2, 3)
for (x in xs) {
xs <- c(xs, x * 2)
}
xs
#> [1] 1 2 3 2 4 6
for (i in 1:3) {
i <- i * 2
print(i)
}
knitr::opts_chunk$set(echo = TRUE)
ifelse("true", 1, "no")
ifelse("hi", 1, "no")
ifelse(NA_character_, 1, "no")
x <- numeric(1,3,4,0)
?numeric
x <- numeric(c(1,3,4,0))
x <- numeric(3)
x[1] <- 4
x[2] <- 0
x[3] <- 7
x
x[5] <- 88
x
if(x, "not empty", "empty")
if(x, "not empty")
if(x) "not empty" else "empty"
if(x[2]) "not empty" else "empty"
x <- numeric()
out <- vector("list", length(x))
for (i in 1:length(x)) {
cat(x[i])
out[i] <- x[i] ^ 2
}
out
x <- numeric()
out <- vector("list", length(x))
for (i in 1:length(x)) {
cat(x[i], "\n")
out[i] <- x[i] ^ 2
}
out
y[0]
y <- numeric(4)
y <- 1
y <- numeric(4)
y[1]
y
y[0]
y <- character(4)
y[0]
y[0] <- 54
y
y[0] <- "54"
y
y[0]
x <- numeric()
out <- vector("list", length(x))
for (i in 1:length(x)) {
out[i] <- x[i] ^ 2
}
out
knitr::opts_chunk$set(echo = TRUE)
range("Sturges")
#> [1] "Sturges" "Sturges"
?hist
?range
?range("Sturges")
range("Sturges")
show_time <- function(x = stop("Error!")) {
stop <- function(...) Sys.time()
print(x)
}
show_time()
show_time <- function(x = stop("Error!")) {
stop <- function() Sys.time()
print(x)
}
show_time()
library()
?library
library
?list2
?sum
mea(1:4)
mean(1:4)
mean(1:3)
mean(1,2,3)
1:3
?mean
?summ
?sum
?mean
plot(1:10, col = "red", pch = 20, xlab = "x", col.lab = "blue")
?plot
?par
plot.default
?plot.default
with_dir <- function(dir, code) {
old <- setwd(dir)
on.exit(setwd(old), add = TRUE)
force(code)
}
getwd()
with_dir("/home/pilares/", getwd())
getwd()
?setwd
?load
load
.Internal()
?.Internal
?write.table
write.table
?source
source
dev.new()
plot
?Devices
png()
dev.off()
dev.off()
plotSupp <- function (code) {
png()
force(code)
dev.off()
}
plotSupp("plot(1)")
getwd()
plot(1)
png()
plot(1)
dev.off()
dev.off()
png()
dev.off()
png()
plot(1)
dev.off()
?force
?eval
eval(2 ^ 2 ^ 3)
force(2 ^ 2 ^ 3)
plotSupp(plot(1))
capture.output
?on.exit
?capture.output
?sink
rval
get(rval)
?capture.output
1:3 + 3
options(warnPartialMatchArgs = TRUE)
?:::
?`:::`
?`:`
?`<<-`
?`o`
?`%o%`
?`%x%`
?`%+%`
?`%*%`
?`%/%`
tracemem()
tracemem(x)
x <- s
x <- 89
tracemem(x)
?alist
1 + 2 + 3
`+`(`+`(1,2), 3)
1 + (2 + 3)
if (length(x) <= 5) x[[5]] else x[[n]]
1 + 2 + 3
`+`(`+`(1,2), 3)
1 + (2 + 3)
`+`(`+`(2,3), 1)
x <- 1:5
n <- 7
if (length(x) <= 5) x[[5]] else x[[n]]
`if`(length(x) <= 5, x[[5]], x[[n]])
?sample
_runif
?runif
x <- sample(replace = TRUE, 20, x = c(1:10, NA))
# El primer y el tercer argumento se mandan por nombre y el segundo por posición.
y <- runif(min = 0, max = 1, 20)
cor(m = "k", y = y, u = "p", x = x)
?cor
plotSupp <- function (code) {
png()
force(code)
dev.off()
}
modify(get("x"), 1) <- 10
?modify
modify(get("x"), 1)
`modify<-` <- function(x, position, value) {
x[position] <- value
x
}
modify(get("x"), 1)
modify(get("x"), 1) <- 10
modify(x, 1) <- 10
x
get("x")[1]
?get
`reemplazar<-` <- function(x, value) {
x[sample(length(x))] <- value
x
}
rx <- 1:10
reemplazar(rx, 1000)
`reemplazar<-` <- function(x, value) {
x[sample(length(x))] <- value
x
}
rx <- 1:10
reemplazar(rx, 1000)
`reemplazar<-` <- function(x, value) {
x[sample(length(x))] <- value
x
}
rx <- 1:10
reemplazar(rx) <- 1000
rx
`reemplazar<-` <- function(x, value) {
x[sample(length(x), 1)] <- value
x
}
rx <- 1:10
reemplazar(rx) <- 1000
rx
`||`
?`||`
`+` <- function(x, y) {
if(is.character(x) || is.character(y)) {
return(paste0(x,y))
}
x+y
}
1 + 2
#> [1] 3
"a" + "b"
#> [1] "ab"
`+` <- function(x, y) {
if(is.character(x) || is.character(y)) {
return(paste0(x,y))
}
x+y
}
1 + 2
#> [1] 3
"a" + "b"
#> [1] "ab"
5 + "o"
`+` <- function(x, y) {
if(is.character(x) || is.character(y)) {
return(paste0(x,y))
}
sum(x,y)
}
1 + 2
"a" + "b"
5 + "o"
?apropos
?mget
?apropos
apropos("*<-$", funs)
objs <- mget(ls("package:base", all = TRUE), inherits = TRUE)
funs <- Filter(is.function, objs)
apropos("*<-$", funs)
apropos("*<-$")
`%algo%` <- function(x, y) {
paste0(x, "algo", y)
}
"mia" %algo% "perrito"
`%xor%` <- function(x, y) {
xor(x, y)
}
TRUE %xor% FALSE
TRUE %xor% TRUE
?intersect
`%n%` <- function(x, y) {
x[x %in% y]
}
`%u%` <- function(x, y) {
unique(c(x, y))
}
`%/%` <- function(x, y) {
unique(c(x[!x %in% y], y[!y %in% x]))
}
1:20 %n% 12:14
`%n%` <- function(x, y) {
x[x %in% y]
}
`%u%` <- function(x, y) {
unique(c(x, y))
}
`%/%` <- function(x, y) {
unique(c(x[!x %in% y], y[!y %in% x]))
}
1:20 %n% 12:14
1:20 %u% 10:30
`%xor%` <- function(x, y) {
(x||y) & !(x&&y)
}
TRUE %xor% FALSE
TRUE %xor% TRUE
`%xor%` <- function(x, y) {
(x||y) & !(x&&y)
}
TRUE %xor% FALSE
TRUE %xor% TRUE
`%n%` <- function(x, y) {
x[x %in% y]
}
`%u%` <- function(x, y) {
unique(c(x, y))
}
`%/%` <- function(x, y) {
unique(c(x[!x %in% y], y[!y %in% x]))
}
1:20 %n% 12:14
1:20 %u% 10:30
1:20 %/% 12:14
?setNames
sum(lapply(funs, function(fn) length(formals(fn))) == 0)
prim_funs <- Filter(is.primitive, Filter(is.function, objs))
length(prim_funs)
knitr::opts_chunk$set(echo = TRUE)
show_time <- function(x = stop("Error!")) {
stop <- function(...) Sys.time()
print(x)
}
show_time()
?mean
?par
browser()
plot(1:10, col = "red")
exit()
q()
col
plot
plot(1:10, col = "red")
View(show_time)
p <- plot(1:10, col = "red")
?load
load
loadFromConn2
getMethod("load")
getAnywhere("load")
?write.table
write.table
?setwd
capture.output2 <- function(code) {
temp <- tempfile()
on.exit(file.remove(temp), add = TRUE, after = TRUE)
sink(temp)
on.exit(sink(), add = TRUE, after = TRUE)
force(code)
readLines(temp)
}
capture.output2(cat("a", "b", "c", sep = "\n"))
capture.output({1})
#> [1] "[1] 1"
capture.output2({1})
#> character(0)
?replace
?sample
?runif
?cor
x <- 1:3
`modify<-` <- function(x, position, value) {
x[position] <- value
x
}
modify(x, 2) <- 5
x
x <- `modify<-`(x, 1, 10)
x <- `modify<-`(x, 2, 5)
x
`+` <- function(x, y) {
if(is.character(x) || is.character(y)) {
paste0(x,y)
}
sum(x,y)
}
1 + 2
"a" + "b"
`+` <- function(x, y) {
if(is.character(x) || is.character(y)) {
paste0(x,y)
}
sum(x,y)
}
1 + 2
"a" + "b"
`+` <- function(x, y) {
if(is.character(x) || is.character(y)) {
paste0(x,y)
} else {
sum(x,y)
}
}
1 + 2
"a" + "b"
5 + "o"
rm(`+`)
?search()
apropos("*<-$", mode = "function")
search()
?apropos
# busca en el path de search()
apropos("*<-$", mode = "function")
# y search() indica que hay varios paquetes
search()
search()
funcs <- apropos("*<-$", mode = "function", where = TRUE) == 10
funcs <- apropos("*<-$", mode = "function", where = TRUE)
funcs <- funcs [funcs == 10]
funcs <- apropos("*<-$", mode = "function", where = TRUE)
#funcs <- funcs [funcs == 10]
funcs
funcs == 10
names(funcs) == 10
funcs <- apropos("*<-$", mode = "function", where = TRUE)
funcs <- funcs [names(funcs) == 10]
funcs
Filter(is.primitive, funcs)
Filter(is.primitive, mget(funcs))
Filter(is.primitive, mget(funcs, envir = baseenv()))
library(survminer)
ggsurvplot(survfit(cox_model), color = "#2E9FDF",
ggtheme = theme_minimal())
library(survival)
library(survminer)
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(janitor)
ggsurvplot(survfit(cox_model), color = "#2E9FDF",
ggtheme = theme_minimal())
## Leemos los datos
local_avan <- read_tsv("data/localmente_avanzadas.tsv")
setwd("~/Workspace/montse/biomarcadores_rcb")
## Leemos los datos
local_avan <- read_tsv("data/localmente_avanzadas.tsv")
## Convertimos años a días y renombramos el status
local_avan <- local_avan %>%
mutate(time = drfs_even_time_years * 365) %>%
rename("status" = drfs_1_event_0_censored) %>%
filter(!is.na(rs_group))
## Agregamos la expresión de los genes
rma_data <- read_tsv("data/rs_rma_normalized.tsv")
features <- read_tsv("data/features.tsv")
features <- features %>% filter(str_detect(gene_symbol,
pattern = "GRIA4|NDUFAF3|SLC12A1"))
rma_data <- rma_data %>% filter(feature %in% features$id) %>%
inner_join(features %>% select(id, gene_symbol), by = c("feature" = "id")) %>%
select(gene_symbol, everything(), -feature) %>%
pivot_longer(-1) %>% pivot_wider(names_from = gene_symbol)
local_avan <- local_avan %>% inner_join(rma_data, by = "name")
local_avan <- local_avan %>% select(name, time, status, rs_group, age_years, pr_status_ihc, clinical_t_stage,
clinical_ajcc_stage, pathologic_response_rcb_class,
pam50_class, GRIA4, NDUFAF3, SLC12A1) %>%
mutate(across(where(is.character), as.factor),
across(where(is.factor), as.numeric))
## Fit del modelo con todas las muestras
cox_model <- coxph(Surv(time, status) ~ pathologic_response_rcb_class+GRIA4+NDUFAF3+SLC12A1+pam50_class+clinical_ajcc_stage,
data=local_avan)
summary(cox_model)
ggsurvplot(survfit(cox_model), color = "#2E9FDF",
ggtheme = theme_minimal())
ggsurvplot(survfit(cox_model), color = "#2E9FDF",
ggtheme = theme_minimal(), data = local_avan)
ggsurvplot(survfit(cox_model),
ggtheme = theme_minimal(), data = local_avan)
?survfit
